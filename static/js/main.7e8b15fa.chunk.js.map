{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["require","config","App","handleClick","console","log","find_movies","state","Search_keyword","DataMovies","Search_type","handleChange1","bind","handleChange2","handleKeyDown","query_search","this","query_type","axios","get","process","DB_API_KEY","then","response","data","setState","results","catch","error","event","target","value","keyCode","data_kolom","map","item","index","id_title","undefined","title","name","id_release_date","release_date","slice","id_film_rating","vote_average","id_film_rating_count","vote_count","url_type","id_url_movies","id","id_film_overview","overview","img_poster","poster_path","className","key","src","alt","onClick","window","open","href","rel","type","placeholder","onChange","onKeyDown","aria-hidden","height","Component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7e8b15fa.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './component/App.css';\n\nrequire('dotenv').config()\n\nconst ENTER_KEY = 13;\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      Search_keyword: \"\",\n      DataMovies: [],\n      Search_type: \"movie\",\n    };\n\n    this.handleChange1 = this.handleChange1.bind(this);\n    this.handleChange2 = this.handleChange2.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    \n\n  }\n\n  // 'https://api.themoviedb.org/4/list/143529?api_key=' + process.env.DB_API_KEY + '&page=1'\n\n  find_movies() {\n    let query_search = this.state.Search_keyword;\n    let query_type = this.state.Search_type;\n    console.log(query_search);\n    console.log(query_type);\n\n    axios.get('https://api.themoviedb.org/3/search/' + query_type + '?api_key=' + process.env.DB_API_KEY + '&query=' + query_search + '&page=1', {\n      \"async\": true,\n      \"crossDomain\": true,\n      \"method\": \"GET\",\n      \"headers\": {\n        \"content-type\": \"application/json;charset=utf-8\",\n        \"authorization\": \"Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3ZGUxM2FlZGU0MWUwZTE3YTQxMDRmZmNhNzMzMjNkYSIsInN1YiI6IjVlYzc0ZmFiZDIxNDdjMDAyM2JlYjA5YiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.JCgsMXm5wbYGA6lcd7_Yq970YK-HZEsyec87wgiF-9c\"\n      },\n      \"processData\": false,\n      \"data\": \"{}\"\n    }).then((response) => {\n      console.log(response.data);\n      this.setState({\n        DataMovies: response.data.results,\n      })\n    })\n      .catch(error => {\n        console.log(error.response)\n      });\n  }\n\n  // componentWillMount() { }\n\n  componentDidMount() {\n    this.find_movies();\n  }\n\n  handleChange1(event) {\n    this.setState({ Search_keyword: event.target.value });\n  }\n\n  handleChange2(event) {\n    this.setState({ Search_type: event.target.value });\n  }\n\n  handleKeyDown(event) {\n    if (event.keyCode === ENTER_KEY) {\n      this.find_movies();\n    }\n  }\n\n  handleClick = () => { \n    console.log('this is:', this);\n    // this.setState({ Search_keyword: this.Search_keyword });\n    this.find_movies()\n   }\n\n\n  render() {\n    const data_kolom = this.state.DataMovies.map((item, index) => {\n\n      var id_title = '';\n      if (item.title === undefined) {\n        id_title = item.name\n      } else {\n        id_title = item.title\n      };\n\n      var id_release_date = '';\n\n      if (item.release_date === undefined || item.release_date === '') {\n        id_release_date = ''\n      } else {\n        id_release_date = '(' + item.release_date.slice(0, 4) + ')'\n      };\n\n\n      var id_film_rating = item.vote_average;\n      var id_film_rating_count = item.vote_count;\n      var url_default = \"https://www.themoviedb.org/\";\n      var url_type = this.state.Search_type + \"/\";\n      var id_url_movies = item.id;\n      var id_film_overview = item.overview;\n\n\n      var img_default = \"https://image.tmdb.org/t/p/w500/\";\n      var img_poster = '';\n\n      if (item.poster_path === null) {\n        img_poster = 'https://dummyimage.com/500x750/000/fff.jpg&text=No+Poster+Image'\n      } else {\n        img_poster = img_default + item.poster_path\n      };\n\n\n      return <div className=\"row\" key={index}>\n        <div className=\"col-sm-4\">\n          <div id=\"film_img\" /> <img src={img_poster} alt=\"film_poster\" onClick={() => window.open(url_default + url_type + id_url_movies, \"_blank\")}></img>\n        </div>\n        <div className=\"col-sm-8 col-film-info\">\n          <div id=\"film\"> {id_title} </div>\n          <div id=\"film_release_date\"> {id_release_date} </div>\n          <div id=\"film_rating\"> Rating: {id_film_rating} ({id_film_rating_count} users vote) </div>\n          <div id=\"film_overview\"> {id_film_overview}</div>\n        </div>\n      </div>;\n    })\n\n\n\n    return (\n      <div>\n        <div className=\"container container-header\">\n          <div className=\"jumbotron jumbotron-fluid\">\n            <div className=\"container\">\n              <h1 className=\"display-4\"><span id=\"deskripsi\" /> Simple Movie Finder </h1>\n              <p className=\"lead\" id=\"deskripsi_header\"> Create by <a href=\"https://github.com/hestu14\" target=\"_blank\" rel=\"noopener noreferrer\">hestu14</a>\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"container container-search\">\n          <div className=\"input-group md-form form-sm form-2 pl-0\">\n            <input className=\"form-control my-0 py-1 lime-border\" type=\"search\" placeholder=\"Tekan Enter untuk mencari\"\n              value={this.state.Search_keyword}\n              onChange={this.handleChange1}\n              onKeyDown={this.handleKeyDown} >\n            </input>\n\n            <div className=\"input-group-append\">\n              <span className=\"input-group-text lime lighten-2\" id=\"basic-text1\"><i className=\"fa fa-search text-grey\" aria-hidden=\"true\"\n                onClick={this.handleClick}\n              /></span>\n            </div>\n          </div>\n\n        </div>\n\n        <form >\n          <div className=\"form-group container\">\n            <select className=\"form-control\" id=\"exampleFormControlSelect1\" value={this.state.Search_type} onChange={this.handleChange2}>\n              <option value=\"movie\">Movies</option>\n              <option value=\"tv\">TV Series</option>\n            </select>\n          </div>\n        </form>\n\n        <div className=\"container\">\n          {data_kolom}\n        </div>\n\n        <footer id=\"sticky-footer\" className=\"py-4 bg-light text-white-50\">\n          <div className=\"container text-center\">\n            <small>Sponsored by : <a href=\"https://www.themoviedb.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <img alt=\"tmdb_logo\" src=\"https://www.themoviedb.org/assets/2/v4/logos/v2/blue_short-8e7b30f73a4020692ccca9c88bafe5dcb6f8a62a4c6bc55cd9ba82bb2cd95f6c.svg\" height={11} />\n            </a></small>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}